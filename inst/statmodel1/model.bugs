model{ 
#LIKELIHOOD
for (lang.idx in 1:Nlang){ for (group.idx in 1:Ngroup){ for (corpustype.idx in 1:Ncorpustype){ for (subjtype.idx in 1:Nsubjtype){ for (is_presentational.idx in 1:Nis_presentational){ 
    observations[lang.idx, group.idx, corpustype.idx, subjtype.idx, is_presentational.idx, 1:Nlocation3] ~ dmulti(probs[lang.idx, group.idx, corpustype.idx, subjtype.idx, is_presentational.idx, 1:Nlocation3], totals[lang.idx, group.idx, corpustype.idx, subjtype.idx, is_presentational.idx])
    for (location3.idx in 1:Nlocation3){ 
        probs[lang.idx, group.idx, corpustype.idx, subjtype.idx, is_presentational.idx, location3.idx] <- phi[lang.idx, group.idx, corpustype.idx, subjtype.idx, is_presentational.idx, location3.idx] / sum(phi[lang.idx, group.idx, corpustype.idx, subjtype.idx, is_presentational.idx, 1:Nlocation3])
        log(phi[lang.idx, group.idx, corpustype.idx, subjtype.idx, is_presentational.idx, location3.idx]) <- location3[location3.idx] + lang[lang.idx, location3.idx] + group[group.idx, location3.idx] + lang.group[lang.idx, group.idx, location3.idx] + corpustype[corpustype.idx, location3.idx] + lang.corpustype[lang.idx, corpustype.idx, location3.idx] + subjtype[subjtype.idx, location3.idx] + lang.subjtype[lang.idx, subjtype.idx, location3.idx] + is_presentational[is_presentational.idx, location3.idx] + lang.is_presentational[lang.idx, is_presentational.idx, location3.idx] 
}
}}}}}
#PRIORS
sigma.location3 ~ dt(0,1,1) T(0,)
tau.location3 <- pow(sigma.location3,-2)
 
sigma.lang ~ dt(0,1,1) T(0,)
tau.lang <- pow(sigma.lang,-2)
 
sigma.group ~ dt(0,1,1) T(0,)
tau.group <- pow(sigma.group,-2)
 
sigma.lang.group ~ dt(0,1,1) T(0,)
tau.lang.group <- pow(sigma.lang.group,-2)
 
sigma.corpustype ~ dt(0,1,1) T(0,)
tau.corpustype <- pow(sigma.corpustype,-2)
 
sigma.lang.corpustype ~ dt(0,1,1) T(0,)
tau.lang.corpustype <- pow(sigma.lang.corpustype,-2)
 
sigma.subjtype ~ dt(0,1,1) T(0,)
tau.subjtype <- pow(sigma.subjtype,-2)
 
sigma.lang.subjtype ~ dt(0,1,1) T(0,)
tau.lang.subjtype <- pow(sigma.lang.subjtype,-2)
 
sigma.is_presentational ~ dt(0,1,1) T(0,)
tau.is_presentational <- pow(sigma.is_presentational,-2)
 
sigma.lang.is_presentational ~ dt(0,1,1) T(0,)
tau.lang.is_presentational <- pow(sigma.lang.is_presentational,-2)
 
for (location3.idx in 1:Nlocation3){ 
    location3[location3.idx] ~ dnorm(0, tau.location3)
}
 
for (location3.idx in 1:Nlocation3){ 
    lang.raw[location3.idx] ~ dnorm(0, tau.lang)
    lang[1, location3.idx] <- lang.raw[location3.idx] - mean(lang.raw[1:Nlocation3])
    lang[2, location3.idx] <- -lang[1, location3.idx]
 
    for (group.idx in 1:Ngroup){ 
        group.raw[group.idx, location3.idx] ~ dnorm(0, tau.group)
        group[group.idx, location3.idx] <- 
            group.raw[group.idx, location3.idx] 
            - mean(group.raw[1:Ngroup, location3.idx]) 
            - mean(group.raw[group.idx, 1:Nlocation3]) 
            + mean(group.raw[1:Ngroup, 1:Nlocation3]) 
        #INTERACTION
        lang.group.raw[group.idx, location3.idx] ~ dnorm(0, tau.lang.group)
        lang.group[1, group.idx, location3.idx] <- 
            lang.group.raw[group.idx, location3.idx] 
            - mean(lang.group.raw[1:Ngroup, location3.idx]) 
            - mean(lang.group.raw[group.idx, 1:Nlocation3]) 
            + mean(lang.group.raw[1:Ngroup, 1:Nlocation3]) 
        lang.group[2,group.idx,location3.idx] <- -lang.group[1,group.idx,location3.idx]
}
    #A BINARY PREDICTOR:
    corpustype.raw[location3.idx] ~ dnorm(0, tau.corpustype)
    corpustype[1, location3.idx] <- corpustype.raw[location3.idx] - mean(corpustype.raw[1:Nlocation3])
    corpustype[2, location3.idx] <- -corpustype[1, location3.idx]
 
    lang.corpustype.raw[location3.idx] ~ dnorm(0, 0.001)
    lang.corpustype[1, 1, location3.idx] <- lang.corpustype.raw[location3.idx] - mean(lang.corpustype.raw[1:Nlocation3]) 
    lang.corpustype[1, 2, location3.idx] <- -lang.corpustype[1,1,location3.idx]
    lang.corpustype[2, 1, location3.idx] <- -lang.corpustype[1,1,location3.idx]
    lang.corpustype[2, 2, location3.idx] <- lang.corpustype[1,1,location3.idx]
    #A BINARY PREDICTOR:
    subjtype.raw[location3.idx] ~ dnorm(0, tau.subjtype)
    subjtype[1, location3.idx] <- subjtype.raw[location3.idx] - mean(subjtype.raw[1:Nlocation3])
    subjtype[2, location3.idx] <- -subjtype[1, location3.idx]
 
    lang.subjtype.raw[location3.idx] ~ dnorm(0, 0.001)
    lang.subjtype[1, 1, location3.idx] <- lang.subjtype.raw[location3.idx] - mean(lang.subjtype.raw[1:Nlocation3]) 
    lang.subjtype[1, 2, location3.idx] <- -lang.subjtype[1,1,location3.idx]
    lang.subjtype[2, 1, location3.idx] <- -lang.subjtype[1,1,location3.idx]
    lang.subjtype[2, 2, location3.idx] <- lang.subjtype[1,1,location3.idx]
    #A BINARY PREDICTOR:
    is_presentational.raw[location3.idx] ~ dnorm(0, tau.is_presentational)
    is_presentational[1, location3.idx] <- is_presentational.raw[location3.idx] - mean(is_presentational.raw[1:Nlocation3])
    is_presentational[2, location3.idx] <- -is_presentational[1, location3.idx]
 
    lang.is_presentational.raw[location3.idx] ~ dnorm(0, 0.001)
    lang.is_presentational[1, 1, location3.idx] <- lang.is_presentational.raw[location3.idx] - mean(lang.is_presentational.raw[1:Nlocation3]) 
    lang.is_presentational[1, 2, location3.idx] <- -lang.is_presentational[1,1,location3.idx]
    lang.is_presentational[2, 1, location3.idx] <- -lang.is_presentational[1,1,location3.idx]
    lang.is_presentational[2, 2, location3.idx] <- lang.is_presentational[1,1,location3.idx]
}
 
#STANDARD DEVIATIONS
std.lang <- sd(lang[,])
std.group <- sd(group[,])
std.corpustype <- sd(corpustype[,])
std.subjtype <- sd(subjtype[,])
std.is_presentational <- sd(is_presentational[,])
std.lang.group <- sd(lang.group[,,])
std.lang.corpustype <- sd(lang.corpustype[,,])
std.lang.subjtype <- sd(lang.subjtype[,,])
std.lang.is_presentational <- sd(lang.is_presentational[,,])
}